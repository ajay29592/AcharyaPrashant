// Generated by Dagger (https://dagger.dev).
package me.acharya.mvvm.data.repository;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import me.acharya.mvvm.data.api.NetworkService;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TopHeadlineRepository_Factory implements Factory<TopHeadlineRepository> {
  private final Provider<NetworkService> networkServiceProvider;

  public TopHeadlineRepository_Factory(Provider<NetworkService> networkServiceProvider) {
    this.networkServiceProvider = networkServiceProvider;
  }

  @Override
  public TopHeadlineRepository get() {
    return newInstance(networkServiceProvider.get());
  }

  public static TopHeadlineRepository_Factory create(
      Provider<NetworkService> networkServiceProvider) {
    return new TopHeadlineRepository_Factory(networkServiceProvider);
  }

  public static TopHeadlineRepository newInstance(NetworkService networkService) {
    return new TopHeadlineRepository(networkService);
  }
}
