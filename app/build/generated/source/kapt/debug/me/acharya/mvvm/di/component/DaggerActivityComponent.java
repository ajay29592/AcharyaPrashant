// Generated by Dagger (https://dagger.dev).
package me.acharya.mvvm.di.component;

import dagger.internal.DaggerGenerated;
import dagger.internal.Preconditions;
import me.acharya.mvvm.di.module.ActivityModule;
import me.acharya.mvvm.di.module.ActivityModule_ProvideTopHeadlineAdapterFactory;
import me.acharya.mvvm.di.module.ActivityModule_ProvideTopHeadlineViewModelFactory;
import me.acharya.mvvm.ui.topheadline.TopHeadlineActivity;
import me.acharya.mvvm.ui.topheadline.TopHeadlineActivity_MembersInjector;
import me.acharya.mvvm.ui.topheadline.TopHeadlineViewModel;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerActivityComponent {
  private DaggerActivityComponent() {
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private ActivityModule activityModule;

    private ApplicationComponent applicationComponent;

    private Builder() {
    }

    public Builder activityModule(ActivityModule activityModule) {
      this.activityModule = Preconditions.checkNotNull(activityModule);
      return this;
    }

    public Builder applicationComponent(ApplicationComponent applicationComponent) {
      this.applicationComponent = Preconditions.checkNotNull(applicationComponent);
      return this;
    }

    public ActivityComponent build() {
      Preconditions.checkBuilderRequirement(activityModule, ActivityModule.class);
      Preconditions.checkBuilderRequirement(applicationComponent, ApplicationComponent.class);
      return new ActivityComponentImpl(activityModule, applicationComponent);
    }
  }

  private static final class ActivityComponentImpl implements ActivityComponent {
    private final ActivityModule activityModule;

    private final ApplicationComponent applicationComponent;

    private final ActivityComponentImpl activityComponentImpl = this;

    private ActivityComponentImpl(ActivityModule activityModuleParam,
        ApplicationComponent applicationComponentParam) {
      this.activityModule = activityModuleParam;
      this.applicationComponent = applicationComponentParam;

    }

    private TopHeadlineViewModel topHeadlineViewModel() {
      return ActivityModule_ProvideTopHeadlineViewModelFactory.provideTopHeadlineViewModel(activityModule, Preconditions.checkNotNullFromComponent(applicationComponent.getTopHeadlineRepository()));
    }

    @Override
    public void inject(TopHeadlineActivity activity) {
      injectTopHeadlineActivity(activity);
    }

    private TopHeadlineActivity injectTopHeadlineActivity(TopHeadlineActivity instance) {
      TopHeadlineActivity_MembersInjector.injectTopHeadlineViewModel(instance, topHeadlineViewModel());
      TopHeadlineActivity_MembersInjector.injectAdapter(instance, ActivityModule_ProvideTopHeadlineAdapterFactory.provideTopHeadlineAdapter(activityModule));
      return instance;
    }
  }
}
